#!groovy

// ideas for future data-driven approach
// https://stackoverflow.com/questions/42770775/how-to-define-and-iterate-over-map-in-jenkinsfile

// NOTE: Named parameters _is_ a thing
// http://docs.groovy-lang.org/latest/html/documentation/#_named_parameters




// only push images from main
pushImage = (env.BRANCH_NAME == 'main')

// buildImage hides most of the pullBuildPush details from callers.
def buildImage(Map args=null, def rVersions, def pythonVersions, def gossVars='goss_vars_basic.yaml') {

    def image = pullBuildPush(
          image_name: 'pwb-session',
          image_tag: tag,
          // can use this to invalidate the cache if needed
	        // cache_tag: 'none',
          latest_tag: latest,
          dockerfile: 'Dockerfile.ubuntu2204',
          build_args: "--build-arg R_VERSIONS=${rVersions} --build-arg PYTHON_VERSIONS=${pythonVersions}",
          build_arg_jenkins_uid: 'JENKINS_UID',
          build_arg_jenkins_gid: 'JENKINS_GID',
          registry_url: 'https://075258722956.dkr.ecr.us-east-1.amazonaws.com',
	        push: pushImage
        )
    
    def imageName = image.imageName()
    sh """
    # See https://github.com/aelsabbahy/goss/releases for release versions
    curl -L https://github.com/aelsabbahy/goss/releases/download/v0.3.8/goss-linux-amd64 -o ./goss
    chmod +rx ./goss

    # (optional) dgoss docker wrapper (use 'master' for latest version)
    curl -L https://raw.githubusercontent.com/aelsabbahy/goss/v0.3.8/extras/dgoss/dgoss -o ./dgoss
    chmod +rx ./dgoss

    GOSS_VARS=${gossVars} GOSS_PATH=./goss ./dgoss run -it -e R_VERSIONS=${rVersions} ${imageName}
    """
    return image
    }
}

ansiColor('xterm') {
  stage('setup') {
    node('docker') {
      checkout scm
      RSPVersion = readFile("rsp-version.txt").trim()
      RSPSafeVersion = RSPVersion.replaceAll("\\+", "-")
      print "Building RSP version: ${RSPVersion}"
      print "Using Safe RSP version for a tag: ${RSPSafeVersion}"
    }
  }
  stage('build') {
    parallel '4.2': {
                def image = buildImage(RSPVersion, '4.2.0', buildRRepo('2022-05-12+Y3JhbiwxMDo1MzA5LDk6ODEyMzg3NTs4QURDRjBGNQ'), pyVersion: '3.10.4')
                print "Finished 4.2"
            },
            '4.1': {
                def image = buildImage(RSPVersion, '4.1.2', buildRRepo('2021-11-12+MTc6NTg4NzczOSwxMDo1MzA5LDk6NTk2NTg0NTsyNENERDc2OQ'), pyVersion: '3.9.6')
                print "Finished 4.1"
            },
            '4.0': {
              def image = buildImage(RSPVersion, '4.0.3', buildRRepo('1363722'), pyVersion: '3.9.6')
              print "Finished 4.0"
            },
            '3.6': {
              def image = buildImage(RSPVersion, '3.6.1', buildRRepo('1654'), pyVersion: '3.9.6')
              print "Finished 3.6"
            },
            '3.5': {
              def image = buildImage(RSPVersion, '3.5.3', buildRRepo('1408'), pyVersion: '3.9.6')
              print "Finished 3.5"
            },
            '3.4': {
              def image = buildImage(RSPVersion, '3.4.4', buildRRepo('324'), pyVersion: '3.9.6')
              print "Finished 3.4"
            },
            '202210': {
              def image = buildImage(RSPVersion, '4.2.0', buildRRepo('2022-09-29+Y3JhbiwxMDo1MzA5LDk6MTE1MDU5MDU7NjZFM0IyNA'), latest: true, dockerfile: './multi.Dockerfile', rVersionAlt: '4.1.2', pyVersion: '3.10.4', pyVersionAlt: '3.9.6', rRepoAlt: buildRRepo('2021-11-12+MTc6NTg4NzczOSwxMDo1MzA5LDk6NTk2NTg0NTsyNENERDc2OQ'), tag: "${RSPSafeVersion}-202210", gossVars: 'goss_vars.yaml')
              print "Finished 202210"
            }
  }
  stage('finish') {
    node('docker') {
      print "Finished pipeline"
    }
  }
}
